#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DOAN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DACN")]
	public partial class DBSHOPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertBuoi(Buoi instance);
    partial void UpdateBuoi(Buoi instance);
    partial void DeleteBuoi(Buoi instance);
    partial void InsertCT_DonHang(CT_DonHang instance);
    partial void UpdateCT_DonHang(CT_DonHang instance);
    partial void DeleteCT_DonHang(CT_DonHang instance);
    partial void InsertDatLich(DatLich instance);
    partial void UpdateDatLich(DatLich instance);
    partial void DeleteDatLich(DatLich instance);
    partial void InsertDiaDiem(DiaDiem instance);
    partial void UpdateDiaDiem(DiaDiem instance);
    partial void DeleteDiaDiem(DiaDiem instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertNguyenNhan(NguyenNhan instance);
    partial void UpdateNguyenNhan(NguyenNhan instance);
    partial void DeleteNguyenNhan(NguyenNhan instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void UpdatePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void DeletePhuongThucThanhToan(PhuongThucThanhToan instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    partial void InsertThuongHieu(ThuongHieu instance);
    partial void UpdateThuongHieu(ThuongHieu instance);
    partial void DeleteThuongHieu(ThuongHieu instance);
    partial void InsertTrangThaiDonHang(TrangThaiDonHang instance);
    partial void UpdateTrangThaiDonHang(TrangThaiDonHang instance);
    partial void DeleteTrangThaiDonHang(TrangThaiDonHang instance);
    #endregion
		
		public DBSHOPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DACNConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBSHOPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSHOPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSHOPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSHOPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<Buoi> Buois
		{
			get
			{
				return this.GetTable<Buoi>();
			}
		}
		
		public System.Data.Linq.Table<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this.GetTable<CT_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<DatLich> DatLiches
		{
			get
			{
				return this.GetTable<DatLich>();
			}
		}
		
		public System.Data.Linq.Table<DiaDiem> DiaDiems
		{
			get
			{
				return this.GetTable<DiaDiem>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<NguyenNhan> NguyenNhans
		{
			get
			{
				return this.GetTable<NguyenNhan>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhuongThucThanhToan> PhuongThucThanhToans
		{
			get
			{
				return this.GetTable<PhuongThucThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<ThuongHieu> ThuongHieus
		{
			get
			{
				return this.GetTable<ThuongHieu>();
			}
		}
		
		public System.Data.Linq.Table<TrangThaiDonHang> TrangThaiDonHangs
		{
			get
			{
				return this.GetTable<TrangThaiDonHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CMT;
		
		private System.Nullable<System.DateTime> _NgayCmt;
		
		private string _NoiDung;
		
		private System.Nullable<int> _ID_SanPham;
		
		private string _TenKH;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CMTChanging(int value);
    partial void OnID_CMTChanged();
    partial void OnNgayCmtChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCmtChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnID_SanPhamChanging(System.Nullable<int> value);
    partial void OnID_SanPhamChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    #endregion
		
		public BinhLuan()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CMT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CMT
		{
			get
			{
				return this._ID_CMT;
			}
			set
			{
				if ((this._ID_CMT != value))
				{
					this.OnID_CMTChanging(value);
					this.SendPropertyChanging();
					this._ID_CMT = value;
					this.SendPropertyChanged("ID_CMT");
					this.OnID_CMTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCmt", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCmt
		{
			get
			{
				return this._NgayCmt;
			}
			set
			{
				if ((this._NgayCmt != value))
				{
					this.OnNgayCmtChanging(value);
					this.SendPropertyChanging();
					this._NgayCmt = value;
					this.SendPropertyChanged("NgayCmt");
					this.OnNgayCmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(500)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int")]
		public System.Nullable<int> ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buoi")]
	public partial class Buoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Buoi;
		
		private string _BuoiDatLich;
		
		private EntitySet<DatLich> _DatLiches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BuoiChanging(int value);
    partial void OnID_BuoiChanged();
    partial void OnBuoiDatLichChanging(string value);
    partial void OnBuoiDatLichChanged();
    #endregion
		
		public Buoi()
		{
			this._DatLiches = new EntitySet<DatLich>(new Action<DatLich>(this.attach_DatLiches), new Action<DatLich>(this.detach_DatLiches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Buoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Buoi
		{
			get
			{
				return this._ID_Buoi;
			}
			set
			{
				if ((this._ID_Buoi != value))
				{
					this.OnID_BuoiChanging(value);
					this.SendPropertyChanging();
					this._ID_Buoi = value;
					this.SendPropertyChanged("ID_Buoi");
					this.OnID_BuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuoiDatLich", DbType="NVarChar(50)")]
		public string BuoiDatLich
		{
			get
			{
				return this._BuoiDatLich;
			}
			set
			{
				if ((this._BuoiDatLich != value))
				{
					this.OnBuoiDatLichChanging(value);
					this.SendPropertyChanging();
					this._BuoiDatLich = value;
					this.SendPropertyChanged("BuoiDatLich");
					this.OnBuoiDatLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buoi_DatLich", Storage="_DatLiches", ThisKey="ID_Buoi", OtherKey="Buoi")]
		public EntitySet<DatLich> DatLiches
		{
			get
			{
				return this._DatLiches;
			}
			set
			{
				this._DatLiches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.Buoi1 = this;
		}
		
		private void detach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.Buoi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DonHang")]
	public partial class CT_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTDH;
		
		private int _ID_DonHang;
		
		private int _ID_SanPham;
		
		private int _SoLuong;
		
		private long _DonGia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTDHChanging(int value);
    partial void OnID_CTDHChanged();
    partial void OnID_DonHangChanging(int value);
    partial void OnID_DonHangChanged();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(long value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CT_DonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CTDH
		{
			get
			{
				return this._ID_CTDH;
			}
			set
			{
				if ((this._ID_CTDH != value))
				{
					this.OnID_CTDHChanging(value);
					this.SendPropertyChanging();
					this._ID_CTDH = value;
					this.SendPropertyChanged("ID_CTDH");
					this.OnID_CTDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_DonHang
		{
			get
			{
				return this._ID_DonHang;
			}
			set
			{
				if ((this._ID_DonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DonHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DonHang = value;
					this.SendPropertyChanged("ID_DonHang");
					this.OnID_DonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="BigInt NOT NULL")]
		public long DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_DonHang", ThisKey="ID_DonHang", OtherKey="ID_DonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._ID_DonHang = value.ID_DonHang;
					}
					else
					{
						this._ID_DonHang = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_DonHang", Storage="_SanPham", ThisKey="ID_SanPham", OtherKey="ID_SanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._ID_SanPham = value.ID_SanPham;
					}
					else
					{
						this._ID_SanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatLich")]
	public partial class DatLich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DatLich;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<System.DateTime> _NgayHen;
		
		private string _TenNguoiDat;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private System.Nullable<int> _TrangThai;
		
		private System.Nullable<int> _Buoi;
		
		private System.Nullable<int> _ID_KH;
		
		private System.Nullable<int> _NguyenNhan;
		
		private string _GhiChu;
		
		private System.Nullable<int> _DiaDiem;
		
		private string _LyDoHuy;
		
		private EntityRef<Buoi> _Buoi1;
		
		private EntityRef<DiaDiem> _DiaDiem1;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<NguyenNhan> _NguyenNhan1;
		
		private EntityRef<TrangThaiDonHang> _TrangThaiDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DatLichChanging(int value);
    partial void OnID_DatLichChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnNgayHenChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHenChanged();
    partial void OnTenNguoiDatChanging(string value);
    partial void OnTenNguoiDatChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    partial void OnBuoiChanging(System.Nullable<int> value);
    partial void OnBuoiChanged();
    partial void OnID_KHChanging(System.Nullable<int> value);
    partial void OnID_KHChanged();
    partial void OnNguyenNhanChanging(System.Nullable<int> value);
    partial void OnNguyenNhanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDiaDiemChanging(System.Nullable<int> value);
    partial void OnDiaDiemChanged();
    partial void OnLyDoHuyChanging(string value);
    partial void OnLyDoHuyChanged();
    #endregion
		
		public DatLich()
		{
			this._Buoi1 = default(EntityRef<Buoi>);
			this._DiaDiem1 = default(EntityRef<DiaDiem>);
			this._KhachHang = default(EntityRef<KhachHang>);
			this._NguyenNhan1 = default(EntityRef<NguyenNhan>);
			this._TrangThaiDonHang = default(EntityRef<TrangThaiDonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DatLich", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DatLich
		{
			get
			{
				return this._ID_DatLich;
			}
			set
			{
				if ((this._ID_DatLich != value))
				{
					this.OnID_DatLichChanging(value);
					this.SendPropertyChanging();
					this._ID_DatLich = value;
					this.SendPropertyChanged("ID_DatLich");
					this.OnID_DatLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHen", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayHen
		{
			get
			{
				return this._NgayHen;
			}
			set
			{
				if ((this._NgayHen != value))
				{
					this.OnNgayHenChanging(value);
					this.SendPropertyChanging();
					this._NgayHen = value;
					this.SendPropertyChanged("NgayHen");
					this.OnNgayHenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiDat", DbType="NVarChar(150)")]
		public string TenNguoiDat
		{
			get
			{
				return this._TenNguoiDat;
			}
			set
			{
				if ((this._TenNguoiDat != value))
				{
					this.OnTenNguoiDatChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiDat = value;
					this.SendPropertyChanged("TenNguoiDat");
					this.OnTenNguoiDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(150)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					if (this._TrangThaiDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buoi", DbType="Int")]
		public System.Nullable<int> Buoi
		{
			get
			{
				return this._Buoi;
			}
			set
			{
				if ((this._Buoi != value))
				{
					if (this._Buoi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuoiChanging(value);
					this.SendPropertyChanging();
					this._Buoi = value;
					this.SendPropertyChanged("Buoi");
					this.OnBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int")]
		public System.Nullable<int> ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguyenNhan", DbType="Int")]
		public System.Nullable<int> NguyenNhan
		{
			get
			{
				return this._NguyenNhan;
			}
			set
			{
				if ((this._NguyenNhan != value))
				{
					if (this._NguyenNhan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguyenNhanChanging(value);
					this.SendPropertyChanging();
					this._NguyenNhan = value;
					this.SendPropertyChanged("NguyenNhan");
					this.OnNguyenNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(500)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="Int")]
		public System.Nullable<int> DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					if (this._DiaDiem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LyDoHuy", DbType="NVarChar(50)")]
		public string LyDoHuy
		{
			get
			{
				return this._LyDoHuy;
			}
			set
			{
				if ((this._LyDoHuy != value))
				{
					this.OnLyDoHuyChanging(value);
					this.SendPropertyChanging();
					this._LyDoHuy = value;
					this.SendPropertyChanged("LyDoHuy");
					this.OnLyDoHuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buoi_DatLich", Storage="_Buoi1", ThisKey="Buoi", OtherKey="ID_Buoi", IsForeignKey=true)]
		public Buoi Buoi1
		{
			get
			{
				return this._Buoi1.Entity;
			}
			set
			{
				Buoi previousValue = this._Buoi1.Entity;
				if (((previousValue != value) 
							|| (this._Buoi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buoi1.Entity = null;
						previousValue.DatLiches.Remove(this);
					}
					this._Buoi1.Entity = value;
					if ((value != null))
					{
						value.DatLiches.Add(this);
						this._Buoi = value.ID_Buoi;
					}
					else
					{
						this._Buoi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buoi1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_DatLich", Storage="_DiaDiem1", ThisKey="DiaDiem", OtherKey="ID_DiaDiem", IsForeignKey=true)]
		public DiaDiem DiaDiem1
		{
			get
			{
				return this._DiaDiem1.Entity;
			}
			set
			{
				DiaDiem previousValue = this._DiaDiem1.Entity;
				if (((previousValue != value) 
							|| (this._DiaDiem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiaDiem1.Entity = null;
						previousValue.DatLiches.Remove(this);
					}
					this._DiaDiem1.Entity = value;
					if ((value != null))
					{
						value.DatLiches.Add(this);
						this._DiaDiem = value.ID_DiaDiem;
					}
					else
					{
						this._DiaDiem = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiaDiem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatLich", Storage="_KhachHang", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatLiches.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatLiches.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenNhan_DatLich", Storage="_NguyenNhan1", ThisKey="NguyenNhan", OtherKey="ID_NguyenNhan", IsForeignKey=true)]
		public NguyenNhan NguyenNhan1
		{
			get
			{
				return this._NguyenNhan1.Entity;
			}
			set
			{
				NguyenNhan previousValue = this._NguyenNhan1.Entity;
				if (((previousValue != value) 
							|| (this._NguyenNhan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguyenNhan1.Entity = null;
						previousValue.DatLiches.Remove(this);
					}
					this._NguyenNhan1.Entity = value;
					if ((value != null))
					{
						value.DatLiches.Add(this);
						this._NguyenNhan = value.ID_NguyenNhan;
					}
					else
					{
						this._NguyenNhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguyenNhan1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DatLich", Storage="_TrangThaiDonHang", ThisKey="TrangThai", OtherKey="TrangThai", IsForeignKey=true)]
		public TrangThaiDonHang TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang.Entity;
			}
			set
			{
				TrangThaiDonHang previousValue = this._TrangThaiDonHang.Entity;
				if (((previousValue != value) 
							|| (this._TrangThaiDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrangThaiDonHang.Entity = null;
						previousValue.DatLiches.Remove(this);
					}
					this._TrangThaiDonHang.Entity = value;
					if ((value != null))
					{
						value.DatLiches.Add(this);
						this._TrangThai = value.TrangThai;
					}
					else
					{
						this._TrangThai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrangThaiDonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaDiem")]
	public partial class DiaDiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DiaDiem;
		
		private string _DiaDiemDatLich;
		
		private EntitySet<DatLich> _DatLiches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DiaDiemChanging(int value);
    partial void OnID_DiaDiemChanged();
    partial void OnDiaDiemDatLichChanging(string value);
    partial void OnDiaDiemDatLichChanged();
    #endregion
		
		public DiaDiem()
		{
			this._DatLiches = new EntitySet<DatLich>(new Action<DatLich>(this.attach_DatLiches), new Action<DatLich>(this.detach_DatLiches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DiaDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DiaDiem
		{
			get
			{
				return this._ID_DiaDiem;
			}
			set
			{
				if ((this._ID_DiaDiem != value))
				{
					this.OnID_DiaDiemChanging(value);
					this.SendPropertyChanging();
					this._ID_DiaDiem = value;
					this.SendPropertyChanged("ID_DiaDiem");
					this.OnID_DiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiemDatLich", DbType="NVarChar(150)")]
		public string DiaDiemDatLich
		{
			get
			{
				return this._DiaDiemDatLich;
			}
			set
			{
				if ((this._DiaDiemDatLich != value))
				{
					this.OnDiaDiemDatLichChanging(value);
					this.SendPropertyChanging();
					this._DiaDiemDatLich = value;
					this.SendPropertyChanged("DiaDiemDatLich");
					this.OnDiaDiemDatLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiaDiem_DatLich", Storage="_DatLiches", ThisKey="ID_DiaDiem", OtherKey="DiaDiem")]
		public EntitySet<DatLich> DatLiches
		{
			get
			{
				return this._DatLiches;
			}
			set
			{
				this._DatLiches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem1 = this;
		}
		
		private void detach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.DiaDiem1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DonHang;
		
		private int _ID_KH;
		
		private System.Nullable<int> _PT_ThanhToan;
		
		private string _GhiChu;
		
		private int _TrangThai;
		
		private string _TenNguoiNhan;
		
		private string _DiaChiNguoiNhan;
		
		private string _SDT_NguoiNhan;
		
		private System.Nullable<System.DateTime> _NgayDat;
		
		private System.Nullable<int> _TrangThaiThanhToan;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<PhuongThucThanhToan> _PhuongThucThanhToan;
		
		private EntityRef<ThanhToan> _ThanhToan;
		
		private EntityRef<TrangThaiDonHang> _TrangThaiDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DonHangChanging(int value);
    partial void OnID_DonHangChanged();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnPT_ThanhToanChanging(System.Nullable<int> value);
    partial void OnPT_ThanhToanChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    partial void OnTenNguoiNhanChanging(string value);
    partial void OnTenNguoiNhanChanged();
    partial void OnDiaChiNguoiNhanChanging(string value);
    partial void OnDiaChiNguoiNhanChanged();
    partial void OnSDT_NguoiNhanChanging(string value);
    partial void OnSDT_NguoiNhanChanged();
    partial void OnNgayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatChanged();
    partial void OnTrangThaiThanhToanChanging(System.Nullable<int> value);
    partial void OnTrangThaiThanhToanChanged();
    #endregion
		
		public DonHang()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._PhuongThucThanhToan = default(EntityRef<PhuongThucThanhToan>);
			this._ThanhToan = default(EntityRef<ThanhToan>);
			this._TrangThaiDonHang = default(EntityRef<TrangThaiDonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DonHang
		{
			get
			{
				return this._ID_DonHang;
			}
			set
			{
				if ((this._ID_DonHang != value))
				{
					this.OnID_DonHangChanging(value);
					this.SendPropertyChanging();
					this._ID_DonHang = value;
					this.SendPropertyChanged("ID_DonHang");
					this.OnID_DonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int NOT NULL")]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ThanhToan", DbType="Int")]
		public System.Nullable<int> PT_ThanhToan
		{
			get
			{
				return this._PT_ThanhToan;
			}
			set
			{
				if ((this._PT_ThanhToan != value))
				{
					if (this._PhuongThucThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPT_ThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PT_ThanhToan = value;
					this.SendPropertyChanged("PT_ThanhToan");
					this.OnPT_ThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int NOT NULL")]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					if (this._TrangThaiDonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiNhan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNguoiNhan
		{
			get
			{
				return this._TenNguoiNhan;
			}
			set
			{
				if ((this._TenNguoiNhan != value))
				{
					this.OnTenNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiNhan = value;
					this.SendPropertyChanged("TenNguoiNhan");
					this.OnTenNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNguoiNhan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChiNguoiNhan
		{
			get
			{
				return this._DiaChiNguoiNhan;
			}
			set
			{
				if ((this._DiaChiNguoiNhan != value))
				{
					this.OnDiaChiNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNguoiNhan = value;
					this.SendPropertyChanged("DiaChiNguoiNhan");
					this.OnDiaChiNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NguoiNhan", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT_NguoiNhan
		{
			get
			{
				return this._SDT_NguoiNhan;
			}
			set
			{
				if ((this._SDT_NguoiNhan != value))
				{
					this.OnSDT_NguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._SDT_NguoiNhan = value;
					this.SendPropertyChanged("SDT_NguoiNhan");
					this.OnSDT_NguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThanhToan", DbType="Int")]
		public System.Nullable<int> TrangThaiThanhToan
		{
			get
			{
				return this._TrangThaiThanhToan;
			}
			set
			{
				if ((this._TrangThaiThanhToan != value))
				{
					if (this._ThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThanhToan = value;
					this.SendPropertyChanged("TrangThaiThanhToan");
					this.OnTrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_CT_DonHangs", ThisKey="ID_DonHang", OtherKey="ID_DonHang")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuongThucThanhToan_DonHang", Storage="_PhuongThucThanhToan", ThisKey="PT_ThanhToan", OtherKey="PT_ThanhToan", IsForeignKey=true)]
		public PhuongThucThanhToan PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan.Entity;
			}
			set
			{
				PhuongThucThanhToan previousValue = this._PhuongThucThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._PhuongThucThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhuongThucThanhToan.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._PhuongThucThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._PT_ThanhToan = value.PT_ThanhToan;
					}
					else
					{
						this._PT_ThanhToan = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhuongThucThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhToan_DonHang", Storage="_ThanhToan", ThisKey="TrangThaiThanhToan", OtherKey="ID_ThanhToan", IsForeignKey=true)]
		public ThanhToan ThanhToan
		{
			get
			{
				return this._ThanhToan.Entity;
			}
			set
			{
				ThanhToan previousValue = this._ThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._ThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhToan.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._ThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._TrangThaiThanhToan = value.ID_ThanhToan;
					}
					else
					{
						this._TrangThaiThanhToan = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DonHang", Storage="_TrangThaiDonHang", ThisKey="TrangThai", OtherKey="TrangThai", IsForeignKey=true)]
		public TrangThaiDonHang TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang.Entity;
			}
			set
			{
				TrangThaiDonHang previousValue = this._TrangThaiDonHang.Entity;
				if (((previousValue != value) 
							|| (this._TrangThaiDonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrangThaiDonHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._TrangThaiDonHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._TrangThai = value.TrangThai;
					}
					else
					{
						this._TrangThai = default(int);
					}
					this.SendPropertyChanged("TrangThaiDonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KH;
		
		private string _HoTen_KH;
		
		private string _SDT_KH;
		
		private string _DiaChi_KH;
		
		private string _Account_KH;
		
		private string _Password_KH;
		
		private EntitySet<DatLich> _DatLiches;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnHoTen_KHChanging(string value);
    partial void OnHoTen_KHChanged();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    partial void OnDiaChi_KHChanging(string value);
    partial void OnDiaChi_KHChanged();
    partial void OnAccount_KHChanging(string value);
    partial void OnAccount_KHChanged();
    partial void OnPassword_KHChanging(string value);
    partial void OnPassword_KHChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatLiches = new EntitySet<DatLich>(new Action<DatLich>(this.attach_DatLiches), new Action<DatLich>(this.detach_DatLiches));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_KH
		{
			get
			{
				return this._HoTen_KH;
			}
			set
			{
				if ((this._HoTen_KH != value))
				{
					this.OnHoTen_KHChanging(value);
					this.SendPropertyChanging();
					this._HoTen_KH = value;
					this.SendPropertyChanged("HoTen_KH");
					this.OnHoTen_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi_KH", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DiaChi_KH
		{
			get
			{
				return this._DiaChi_KH;
			}
			set
			{
				if ((this._DiaChi_KH != value))
				{
					this.OnDiaChi_KHChanging(value);
					this.SendPropertyChanging();
					this._DiaChi_KH = value;
					this.SendPropertyChanged("DiaChi_KH");
					this.OnDiaChi_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Account_KH
		{
			get
			{
				return this._Account_KH;
			}
			set
			{
				if ((this._Account_KH != value))
				{
					this.OnAccount_KHChanging(value);
					this.SendPropertyChanging();
					this._Account_KH = value;
					this.SendPropertyChanged("Account_KH");
					this.OnAccount_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_KH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password_KH
		{
			get
			{
				return this._Password_KH;
			}
			set
			{
				if ((this._Password_KH != value))
				{
					this.OnPassword_KHChanging(value);
					this.SendPropertyChanging();
					this._Password_KH = value;
					this.SendPropertyChanged("Password_KH");
					this.OnPassword_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatLich", Storage="_DatLiches", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<DatLich> DatLiches
		{
			get
			{
				return this._DatLiches;
			}
			set
			{
				this._DatLiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Loai;
		
		private string _TenLoai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LoaiChanging(int value);
    partial void OnID_LoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiSP()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Loai
		{
			get
			{
				return this._ID_Loai;
			}
			set
			{
				if ((this._ID_Loai != value))
				{
					this.OnID_LoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_Loai = value;
					this.SendPropertyChanged("ID_Loai");
					this.OnID_LoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_SanPhams", ThisKey="ID_Loai", OtherKey="ID_Loai")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguyenNhan")]
	public partial class NguyenNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NguyenNhan;
		
		private string _NguyenNhanDatLich;
		
		private EntitySet<DatLich> _DatLiches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NguyenNhanChanging(int value);
    partial void OnID_NguyenNhanChanged();
    partial void OnNguyenNhanDatLichChanging(string value);
    partial void OnNguyenNhanDatLichChanged();
    #endregion
		
		public NguyenNhan()
		{
			this._DatLiches = new EntitySet<DatLich>(new Action<DatLich>(this.attach_DatLiches), new Action<DatLich>(this.detach_DatLiches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NguyenNhan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NguyenNhan
		{
			get
			{
				return this._ID_NguyenNhan;
			}
			set
			{
				if ((this._ID_NguyenNhan != value))
				{
					this.OnID_NguyenNhanChanging(value);
					this.SendPropertyChanging();
					this._ID_NguyenNhan = value;
					this.SendPropertyChanged("ID_NguyenNhan");
					this.OnID_NguyenNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguyenNhanDatLich", DbType="NVarChar(150)")]
		public string NguyenNhanDatLich
		{
			get
			{
				return this._NguyenNhanDatLich;
			}
			set
			{
				if ((this._NguyenNhanDatLich != value))
				{
					this.OnNguyenNhanDatLichChanging(value);
					this.SendPropertyChanging();
					this._NguyenNhanDatLich = value;
					this.SendPropertyChanged("NguyenNhanDatLich");
					this.OnNguyenNhanDatLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguyenNhan_DatLich", Storage="_DatLiches", ThisKey="ID_NguyenNhan", OtherKey="NguyenNhan")]
		public EntitySet<DatLich> DatLiches
		{
			get
			{
				return this._DatLiches;
			}
			set
			{
				this._DatLiches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.NguyenNhan1 = this;
		}
		
		private void detach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.NguyenNhan1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NV;
		
		private string _HoTen_NV;
		
		private string _SDT_NV;
		
		private string _Email_NV;
		
		private string _Account_NV;
		
		private string _Password_NV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NVChanging(int value);
    partial void OnID_NVChanged();
    partial void OnHoTen_NVChanging(string value);
    partial void OnHoTen_NVChanged();
    partial void OnSDT_NVChanging(string value);
    partial void OnSDT_NVChanged();
    partial void OnEmail_NVChanging(string value);
    partial void OnEmail_NVChanged();
    partial void OnAccount_NVChanging(string value);
    partial void OnAccount_NVChanged();
    partial void OnPassword_NVChanging(string value);
    partial void OnPassword_NVChanged();
    #endregion
		
		public NhanVien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NV
		{
			get
			{
				return this._ID_NV;
			}
			set
			{
				if ((this._ID_NV != value))
				{
					this.OnID_NVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV = value;
					this.SendPropertyChanged("ID_NV");
					this.OnID_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen_NV
		{
			get
			{
				return this._HoTen_NV;
			}
			set
			{
				if ((this._HoTen_NV != value))
				{
					this.OnHoTen_NVChanging(value);
					this.SendPropertyChanging();
					this._HoTen_NV = value;
					this.SendPropertyChanged("HoTen_NV");
					this.OnHoTen_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NV", DbType="NVarChar(11)")]
		public string SDT_NV
		{
			get
			{
				return this._SDT_NV;
			}
			set
			{
				if ((this._SDT_NV != value))
				{
					this.OnSDT_NVChanging(value);
					this.SendPropertyChanging();
					this._SDT_NV = value;
					this.SendPropertyChanged("SDT_NV");
					this.OnSDT_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_NV", DbType="NVarChar(50)")]
		public string Email_NV
		{
			get
			{
				return this._Email_NV;
			}
			set
			{
				if ((this._Email_NV != value))
				{
					this.OnEmail_NVChanging(value);
					this.SendPropertyChanging();
					this._Email_NV = value;
					this.SendPropertyChanged("Email_NV");
					this.OnEmail_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Account_NV
		{
			get
			{
				return this._Account_NV;
			}
			set
			{
				if ((this._Account_NV != value))
				{
					this.OnAccount_NVChanging(value);
					this.SendPropertyChanging();
					this._Account_NV = value;
					this.SendPropertyChanged("Account_NV");
					this.OnAccount_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_NV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password_NV
		{
			get
			{
				return this._Password_NV;
			}
			set
			{
				if ((this._Password_NV != value))
				{
					this.OnPassword_NVChanging(value);
					this.SendPropertyChanging();
					this._Password_NV = value;
					this.SendPropertyChanged("Password_NV");
					this.OnPassword_NVChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuongThucThanhToan")]
	public partial class PhuongThucThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PT_ThanhToan;
		
		private string _PhuongThuc;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPT_ThanhToanChanging(int value);
    partial void OnPT_ThanhToanChanged();
    partial void OnPhuongThucChanging(string value);
    partial void OnPhuongThucChanged();
    #endregion
		
		public PhuongThucThanhToan()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_ThanhToan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PT_ThanhToan
		{
			get
			{
				return this._PT_ThanhToan;
			}
			set
			{
				if ((this._PT_ThanhToan != value))
				{
					this.OnPT_ThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PT_ThanhToan = value;
					this.SendPropertyChanged("PT_ThanhToan");
					this.OnPT_ThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThuc", DbType="NVarChar(50)")]
		public string PhuongThuc
		{
			get
			{
				return this._PhuongThuc;
			}
			set
			{
				if ((this._PhuongThuc != value))
				{
					this.OnPhuongThucChanging(value);
					this.SendPropertyChanging();
					this._PhuongThuc = value;
					this.SendPropertyChanged("PhuongThuc");
					this.OnPhuongThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhuongThucThanhToan_DonHang", Storage="_DonHangs", ThisKey="PT_ThanhToan", OtherKey="PT_ThanhToan")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.PhuongThucThanhToan = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.PhuongThucThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SanPham;
		
		private string _TenSanPham;
		
		private System.Nullable<int> _Gia_SanPham;
		
		private string _Image;
		
		private string _ChiTietSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _ID_Loai;
		
		private System.Nullable<int> _ID_ThuongHieu;
		
		private string _MoTa;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<LoaiSP> _LoaiSP;
		
		private EntityRef<ThuongHieu> _ThuongHieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SanPhamChanging(int value);
    partial void OnID_SanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnGia_SanPhamChanging(System.Nullable<int> value);
    partial void OnGia_SanPhamChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnChiTietSanPhamChanging(string value);
    partial void OnChiTietSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnID_LoaiChanging(System.Nullable<int> value);
    partial void OnID_LoaiChanged();
    partial void OnID_ThuongHieuChanging(System.Nullable<int> value);
    partial void OnID_ThuongHieuChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public SanPham()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._LoaiSP = default(EntityRef<LoaiSP>);
			this._ThuongHieu = default(EntityRef<ThuongHieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SanPham
		{
			get
			{
				return this._ID_SanPham;
			}
			set
			{
				if ((this._ID_SanPham != value))
				{
					this.OnID_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._ID_SanPham = value;
					this.SendPropertyChanged("ID_SanPham");
					this.OnID_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia_SanPham", DbType="Int")]
		public System.Nullable<int> Gia_SanPham
		{
			get
			{
				return this._Gia_SanPham;
			}
			set
			{
				if ((this._Gia_SanPham != value))
				{
					this.OnGia_SanPhamChanging(value);
					this.SendPropertyChanging();
					this._Gia_SanPham = value;
					this.SendPropertyChanged("Gia_SanPham");
					this.OnGia_SanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(250)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietSanPham", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ChiTietSanPham
		{
			get
			{
				return this._ChiTietSanPham;
			}
			set
			{
				if ((this._ChiTietSanPham != value))
				{
					this.OnChiTietSanPhamChanging(value);
					this.SendPropertyChanging();
					this._ChiTietSanPham = value;
					this.SendPropertyChanged("ChiTietSanPham");
					this.OnChiTietSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Loai", DbType="Int")]
		public System.Nullable<int> ID_Loai
		{
			get
			{
				return this._ID_Loai;
			}
			set
			{
				if ((this._ID_Loai != value))
				{
					if (this._LoaiSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LoaiChanging(value);
					this.SendPropertyChanging();
					this._ID_Loai = value;
					this.SendPropertyChanged("ID_Loai");
					this.OnID_LoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", DbType="Int")]
		public System.Nullable<int> ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					if (this._ThuongHieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(4000)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_BinhLuan", Storage="_BinhLuans", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_DonHang", Storage="_CT_DonHangs", ThisKey="ID_SanPham", OtherKey="ID_SanPham")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSP_SanPham", Storage="_LoaiSP", ThisKey="ID_Loai", OtherKey="ID_Loai", IsForeignKey=true)]
		public LoaiSP LoaiSP
		{
			get
			{
				return this._LoaiSP.Entity;
			}
			set
			{
				LoaiSP previousValue = this._LoaiSP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSP.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSP.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_Loai = value.ID_Loai;
					}
					else
					{
						this._ID_Loai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_ThuongHieu", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu", IsForeignKey=true)]
		public ThuongHieu ThuongHieu
		{
			get
			{
				return this._ThuongHieu.Entity;
			}
			set
			{
				ThuongHieu previousValue = this._ThuongHieu.Entity;
				if (((previousValue != value) 
							|| (this._ThuongHieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuongHieu.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThuongHieu.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._ID_ThuongHieu = value.ID_ThuongHieu;
					}
					else
					{
						this._ID_ThuongHieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThuongHieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ThanhToan;
		
		private string _TrangThaiThanhToan;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThanhToanChanging(int value);
    partial void OnID_ThanhToanChanged();
    partial void OnTrangThaiThanhToanChanging(string value);
    partial void OnTrangThaiThanhToanChanged();
    #endregion
		
		public ThanhToan()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThanhToan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ThanhToan
		{
			get
			{
				return this._ID_ThanhToan;
			}
			set
			{
				if ((this._ID_ThanhToan != value))
				{
					this.OnID_ThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ID_ThanhToan = value;
					this.SendPropertyChanged("ID_ThanhToan");
					this.OnID_ThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThanhToan", DbType="NVarChar(50)")]
		public string TrangThaiThanhToan
		{
			get
			{
				return this._TrangThaiThanhToan;
			}
			set
			{
				if ((this._TrangThaiThanhToan != value))
				{
					this.OnTrangThaiThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThanhToan = value;
					this.SendPropertyChanged("TrangThaiThanhToan");
					this.OnTrangThaiThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhToan_DonHang", Storage="_DonHangs", ThisKey="ID_ThanhToan", OtherKey="TrangThaiThanhToan")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThanhToan = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.ThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuongHieu")]
	public partial class ThuongHieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ThuongHieu;
		
		private string _TenThuongHieu;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ThuongHieuChanging(int value);
    partial void OnID_ThuongHieuChanged();
    partial void OnTenThuongHieuChanging(string value);
    partial void OnTenThuongHieuChanged();
    #endregion
		
		public ThuongHieu()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ThuongHieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ThuongHieu
		{
			get
			{
				return this._ID_ThuongHieu;
			}
			set
			{
				if ((this._ID_ThuongHieu != value))
				{
					this.OnID_ThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ID_ThuongHieu = value;
					this.SendPropertyChanged("ID_ThuongHieu");
					this.OnID_ThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenThuongHieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenThuongHieu
		{
			get
			{
				return this._TenThuongHieu;
			}
			set
			{
				if ((this._TenThuongHieu != value))
				{
					this.OnTenThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._TenThuongHieu = value;
					this.SendPropertyChanged("TenThuongHieu");
					this.OnTenThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuongHieu_SanPham", Storage="_SanPhams", ThisKey="ID_ThuongHieu", OtherKey="ID_ThuongHieu")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThuongHieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiDonHang")]
	public partial class TrangThaiDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrangThai;
		
		private string _TrangThaiDH;
		
		private EntitySet<DatLich> _DatLiches;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrangThaiChanging(int value);
    partial void OnTrangThaiChanged();
    partial void OnTrangThaiDHChanging(string value);
    partial void OnTrangThaiDHChanged();
    #endregion
		
		public TrangThaiDonHang()
		{
			this._DatLiches = new EntitySet<DatLich>(new Action<DatLich>(this.attach_DatLiches), new Action<DatLich>(this.detach_DatLiches));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDH", DbType="NVarChar(50)")]
		public string TrangThaiDH
		{
			get
			{
				return this._TrangThaiDH;
			}
			set
			{
				if ((this._TrangThaiDH != value))
				{
					this.OnTrangThaiDHChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDH = value;
					this.SendPropertyChanged("TrangThaiDH");
					this.OnTrangThaiDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DatLich", Storage="_DatLiches", ThisKey="TrangThai", OtherKey="TrangThai")]
		public EntitySet<DatLich> DatLiches
		{
			get
			{
				return this._DatLiches;
			}
			set
			{
				this._DatLiches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiDonHang_DonHang", Storage="_DonHangs", ThisKey="TrangThai", OtherKey="TrangThai")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = this;
		}
		
		private void detach_DatLiches(DatLich entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiDonHang = null;
		}
	}
}
#pragma warning restore 1591
